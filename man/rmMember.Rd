% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rmMember.R
\name{rmMember}
\alias{rmMember}
\title{find the mutually exclusive largest branches}
\usage{
rmMember(vectNT, stree)
}
\arguments{
\item{vectNT}{a vector; a branch is represented by its root node.}

\item{stree}{a list of phylo object.}
}
\description{
\code{rmMember} is to find the largest branches which are mutually exclusive and
could cover all given branches. In other words, if we have a lot of branches,
in which some branches are the subbranch of the others, we could use this function to
remove the subbranches.
}
\examples{
{
library(ape)
n <- 20
Lab <- paste("Node",1:(n-1),sep="")
tipLab <- paste("T",1:n,sep="")
# entire tree
set.seed(1)
Tree <- rtree(n,tip.label= tipLab)
Tree <- addNodeLab(treeO = Tree, nodeLab = Lab)
# Subtrees
sTree <- pruneTree(Tree)
# PLOT
ggtree(Tree,branch.length = "none") +
  geom_text2(aes(subset=!isTip, label=label), hjust=-.3) +
  geom_tiplab()

# find the shared nodes from the tree plot
aV <- c("Node12","Node14","Node9","T12")
# final result
rn <- rmMember(vectNT = aV, stree = sTree)
}

}
