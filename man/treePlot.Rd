% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/treePlot.R
\name{treePlot}
\alias{treePlot}
\title{visualize the phylogenetic tree}
\usage{
treePlot(tree, branch = NULL, col.branch = "blue", col.other = "grey",
  point = NULL, col.point = "orange", size.point = 2, zoomNode = NULL,
  zoomLevel = NULL, zoomScale = NULL, legend = FALSE,
  legend.theme = NULL, legend.title = c(point = "Title_point", branch =
  "Title_branch"), legend.label = NULL, size.line.legend = 2,
  size.point.legend = 3, ...)
}
\arguments{
\item{tree}{a phylo object}

\item{branch}{a vector of node numbers labels to specify the branches to be colored. Each branch is represented by its branch node. A leaf node reprents the edge connecting the leaf and its parent.}

\item{col.branch}{a vector of colors. Its length should be one or equals to the length of \strong{branch}. If \strong{col.branch} has the same length as \strong{branch}, the branches are colored correspondingly with the \strong{col.branch}. The default is blue.}

\item{col.other}{a color for the branches other than those specified in \strong{branch}}

\item{point}{a vector of node numbers or node labels to specify the locations to add points in the tree}

\item{col.point}{a color for the \strong{point}. It has length equal to one.}

\item{size.point}{the size for the \strong{point}. It has length equal to one.}

\item{zoomNode}{a vector of nodes to be zoomed in. If default (NULL), the tree is not zoomed in.}

\item{zoomLevel}{a numeric vector. Its length is equal to 1 or equal to the length of \strong{zoomNode}. If default (NULL), a leaf is zoomed in its direct parent level and an internal node is zoomed in its own level.}

\item{zoomScale}{a numeric vector. Its length is equal to one or equal to the length of \strong{zoomNode}. If \strong{zoomScale} has the same length as \strong{zoomNode}, the branches are zoomed in with different scales corresponding to the value of \strong{zoomScale}. If default (NULL), tree is not zoomed in.}

\item{legend}{TRUE or FALSE. Default is FALSE. If TRUE, the legend is created.}

\item{legend.theme}{a list of arguments used for the theme in ggplot2 package (see \code{\link[ggplot2]{theme}} ) and starting with "legend."}

\item{legend.title}{a vector to specify the title of the legend. It must be named with "branch" and "point" to match with the argument \strong{branch} and \strong{point}.}

\item{legend.label}{a list with three members: "col.branch", "col.other", and "col.point". The elements order in each member matches with the corresponding argument \strong{col.branch}, \strong{col.other} and \strong{col.point}, and will display in the legend. See Examples.}

\item{size.line.legend}{the line size shown in the legend for \strong{branch}}

\item{size.point.legend}{the point size shown in the legend for \strong{point}.}

\item{...}{see also \code{\link[ggtree]{ggtree}}}
}
\value{
a tree plot
}
\description{
\code{treePlot} is to visualize a phylogenetic tree.
}
\details{
treePlot is created based on the \pkg{ggtree} and \pkg{ggplot2}. So other geoms from these two packages could be combined with \code{treePlot} to add geoms in the figure created by \code{treePlot}.
}
\examples{

data(bigTree)

# If we want to color two branches with branch node 1000 and 1400
treePlot(tree = bigTree, branch = c(1000, 1400))


# use col.branch and col.other to specify colors
treePlot(tree = bigTree, branch = c(1000, 1400),
col.branch = c("salmon", "blue"), col.other = "grey40")

# add legend to the colored branches
treePlot(tree = bigTree, branch = c(1000, 1400),
col.branch = c("salmon", "blue"), col.other = "grey40",
legend = TRUE, legend.label = list(col.branch = c("up", "down")))

# change legend title
p <- treePlot(tree = bigTree, branch = c(1000, 1400),
col.branch = c("salmon", "blue"), col.other = "grey40",
legend = TRUE,
legend.label = list(col.branch = c("Go up", "Go down")),
legend.title = c("branch" = "Abundance"))

# change legend position (combine with ggplot2 package)
library(ggplot2)
 p + ggplot2::theme(legend.position = "bottom")

# change legend position use legend.theme
treePlot(tree = bigTree, branch = c(1000, 1400),
col.branch = c("salmon", "blue"), col.other = "grey40",
legend = TRUE,
legend.label = list(col.branch = c("Go up", "Go down")),
legend.title = c("branch" = "Truth"),
legend.theme = list(legend.position = "bottom"))


# add points
treePlot(tree = bigTree, branch = c(1000, 1400),
col.branch = c("salmon", "blue"), col.other = "grey40",
legend = TRUE,
legend.label = list(col.branch = c("Go up", "Go down")),
legend.title = c("branch" = "Truth"),
legend.theme = list(legend.position = "bottom"),
point = c(500, 5, 10))


# add points label in legend
treePlot(tree = bigTree, branch = c(1000, 1400),
col.branch = c("salmon", "blue"), col.other = "grey40",
legend = TRUE,
legend.label = list(col.branch = c("Go up", "Go down"),
col.point = "Found"),
legend.title = c("branch" = "Truth", "point"= "Estimate"),
legend.theme = list(legend.position = "bottom"),
point = c(500, 5, 10))


# add points label in legend
treePlot(tree = bigTree, branch = c(1000, 1400),
col.branch = c("salmon", "blue"), col.other = "grey40",
legend = TRUE,
legend.label = list(col.branch = c("Go up", "Go down"),
col.point = "Found", col.other = "Same"),
legend.title = c("branch" = "Truth", "point"= "Estimate"),
legend.theme = list(legend.position = "bottom"),
point = c(500, 5, 10))

}
