% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/treeAGG.R
\docType{methods}
\name{treeAGG}
\alias{treeAGG}
\alias{treeAGG,treeSummarizedExperiment-method}
\alias{treeAGG,data.frame-method}
\alias{treeAGG,DataFrame-method}
\title{Tree aggregation}
\usage{
treeAGG(data, sigf.by, sigf.limit, agg.by, tree, node.by)

\S4method{treeAGG}{treeSummarizedExperiment}(data, sigf.by = NULL,
  sigf.limit = 0.05, agg.by = NULL)

\S4method{treeAGG}{data.frame}(data, sigf.by = NULL, sigf.limit = 0.05,
  agg.by = NULL, tree = NULL, node.by = "nodeLab")

\S4method{treeAGG}{DataFrame}(data, sigf.by = NULL, sigf.limit = 0.05,
  agg.by = NULL, tree = NULL, node.by = "nodeLab")
}
\arguments{
\item{data}{A data frame or a treeSummarizedExperiment.
\itemize{
If a data frame, it should include at least:
\item a column of node labels
     (use labels from this column to map each row to a node of tree.)
\item a column for tree aggregation
     (use value from this column to decide whether to aggregate.)
\item a column of adjusted p value
     (use value from this column to decide whether to reject a null
     hypothesis.)
}}

\item{sigf.by}{A column name. The column contains the p value or adjusted
p value.}

\item{sigf.limit}{A numeric value. The threshold value (for p value or
adjusted p value) to reject a null hypothesis. The chosen value depends on
the \code{sigf.by}.}

\item{agg.by}{A column name. The column used to do tree aggregation.
Commonly, it is the column including p value or adjusted p value.}

\item{tree}{A phylo object. A optional argument. Only use when \code{data}
is a data frame.}

\item{node.by}{A column name. The column stores the node label. A optional
argument. Only use when \code{data} is a data frame.}
}
\value{
A data frame
}
\description{
\code{treeAGG} combines the p values with the tree structure and decide the
which nodes to be aggregated to based on the min-p algorithm.
}
\examples{

library(ggtree)

data(tinyTree)

# data
set.seed(3)
pv <- runif(19)
pValue <- rank(pv)/length(pv)*pv
treeLab <- c(tinyTree$tip.label, tinyTree$node.label)
df <- cbind.data.frame(pV = pValue,
stringsAsFactors = FALSE, nodeLab = treeLab)


# tree aggregation
(tt <- treeAGG(tree = tinyTree, data = df, sigf.limit = 0.05,
sigf.by = "pV", agg.by = "pV", node.by ="nodeLab"))

# display the tree structure and p value at each node
tt$node <- transNode(tree = tinyTree, input = tt$nodeLab)

# p value at each node is given as blue number in tree
# the selected nodes after aggregation is labelled with orange points
# these selected nodes have lower p-value than its descendant nodes if they
# have descendant nodes.
ggtree(tinyTree) \%<+\% tt + geom_text2(aes(label = label), hjust = -0.2) +
geom_text2(aes(label = round(pV, 3)), vjust = -0.5, color = "blue",
 hjust = -0.15) +
geom_point2(aes(subset = aggKeep), color = "orange", size = 2)



}
\author{
Ruizhu Huang
}
